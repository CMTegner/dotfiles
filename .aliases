alias ll='ls -lAFhG'
alias l='ls -lFhG'
alias assertions='pmset -g assertions'
alias emo='cat ~/.emoticons'
alias cx='cd `git rev-parse --show-toplevel`'
alias port-clean='du -sh /opt && sudo port clean --all installed && sudo port -f uninstall inactive  && du -sh /opt'
alias opng='optipng -o 9 -dir . *.png'
alias jtran='find . -name "*.jpg" -exec jpegtran -optimize -outfile optimized.jpg "{}" \; -exec mv optimized.jpg {} \;'
alias b='git branch --list'
alias bn='git co origin/master -b'
alias bls='git for-each-ref --sort=-committerdate --format="%(refname)" refs/heads/ | sed "s/^refs\/heads\///" | tail -r'
alias gpop='git reset --soft HEAD~1'
alias gpush='git push origin HEAD'
alias resound='sudo killall coreaudiod'
alias yt='yarn test'
alias ys='yarn start'
alias yj='yarn jest --coverage'
alias white='yarn lint:fix && git ci -a -m "Fix indentation (whitespace)"'

function port {
    lsof -i :$1
}

function pods {
    watch kubectl get pods -lapp=$1 $2
}

function bb {
    git co $(git b | grep $1 | head -n1)
}

function cdiff {
    if [ -n "$(git status --porcelain)" ]; then
        echo "Working directory is not clean!"
        exit 1
    fi
    git checkout master
    yarn
    yarn jest --coverage
    mv coverage/coverage-summary.json coverage/master.json
    git checkout -
    yarn
    yarn jest --coverage
    istanbul-diff --recurse --detail lines,statements,functions,branches coverage/master.json coverage/coverage-summary.json
}
